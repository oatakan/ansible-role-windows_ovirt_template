---
- name: make iso and provision vm
  block:
    - name: make iso
      ansible.builtin.include_tasks: make_iso.yml
    - name: provision vm
      ansible.builtin.include_tasks: provision_vm.yml
    - name: refresh inventory
      ansible.builtin.meta: refresh_inventory
    - name: clear gathered facts
      ansible.builtin.meta: clear_facts
    - name: clear any host errors
      ansible.builtin.meta: clear_host_errors
    - name: add host
      ansible.builtin.add_host:
        hostname: template_host
        ansible_host: "{{ template_vm_ip_address }}"
        ansible_user: "{{ unattend.local_accounts[0].name }}"
        ansible_password: "{{ unattend.local_accounts[0].password }}"
        ansible_port: "{{ vm_ansible_port | default('5986') }}"
        ansible_connection: winrm
        ansible_winrm_transport: "{{ vm_ansible_winrm_transport | default('credssp') }}"
        ansible_winrm_server_cert_validation: ignore
        ansible_winrm_operation_timeout_sec: 250
        ansible_winrm_read_timeout_sec: 280
        ansible_win_async_startup_timeout: 60

    - name: build windows
      ansible.builtin.include_role:
        name: "{{ windows_build_role }}"
        apply:
          vars:
            target_ovirt: true
            install_updates: true
            remove_apps: true
            clean_up_components: true
            upgrade_powershell: "{{ vm_upgrade_powershell | default('no') }}"
          delegate_to: template_host

    - name: refresh SSO credentials
      ovirt.ovirt.ovirt_auth:
        url: "{{ lookup('env', 'OVIRT_URL') | default(ovirt.url, true) }}"
        username: "{{ lookup('env', 'OVIRT_USERNAME') | default(ovirt.username, true) }}"
        password: "{{ lookup('env', 'OVIRT_PASSWORD') | default(ovirt.password, true) }}"
        insecure: true

    - name: stop vm
      ansible.builtin.include_tasks: stop_vm.yml
    - name: convert to template
      ansible.builtin.include_tasks: convert_to_template.yml
    - name: export ovf
      ansible.builtin.include_tasks: export_ovf.yml
      when: export_ovf|bool

  rescue:
    - name: refresh SSO credentials
      ovirt.ovirt.ovirt_auth:
        url: "{{ lookup('env', 'OVIRT_URL') | default(ovirt.url, true) }}"
        username: "{{ lookup('env', 'OVIRT_USERNAME') | default(ovirt.username, true) }}"
        password: "{{ lookup('env', 'OVIRT_PASSWORD') | default(ovirt.password, true) }}"
        insecure: true

    - name: remove template
      ansible.builtin.include_tasks: remove_template.yml
      when: remove_vm_on_error|bool

    - name: set vm_failed variable
      ansible.builtin.set_fact:
        vm_failed: true

  always:
    - name: refresh SSO credentials
      ovirt.ovirt.ovirt_auth:
        url: "{{ lookup('env', 'OVIRT_URL') | default(ovirt.url, true) }}"
        username: "{{ lookup('env', 'OVIRT_USERNAME') | default(ovirt.username, true) }}"
        password: "{{ lookup('env', 'OVIRT_PASSWORD') | default(ovirt.password, true) }}"
        insecure: true

    - name: remove vm
      ansible.builtin.include_tasks: remove_vm.yml
      when: remove_vm_on_error|bool or (not remove_vm_on_error|bool and not vm_failed|bool)

    - name: remove iso from datastore
      ansible.builtin.include_tasks: datastore_iso_remove.yml
    - name: remove temporary directory
      ansible.builtin.file:
        path: "{{ temp_directory }}"
        state: absent

    - name: logout from oVirt
      ovirt.ovirt.ovirt_auth:
        state: absent
        ovirt_auth: "{{ ovirt_auth }}"

- name: fail if needed
  ansible.builtin.fail:
    msg: fail to create a template.
  when: vm_failed|bool
